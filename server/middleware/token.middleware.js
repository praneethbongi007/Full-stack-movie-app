import JWT from "jsonwebtoken";
import responseHandlers from "../handlerFunctions/response.handler";
import userModel from "../models/userModel";

const tokenDecode = (req) => {
  try {
    const bearerHeader = req.headers.authorization;
    if (bearerHeader) {
      const token = bearerHeader.split(" ")[1];
      return JWT.verify(token, process.env.TOKEN_SECRET); //token secret generated by using "require("crypto").randomBytes(16).toString("hex")";
    }
    return false;
  } catch (error) {
    return false;
  }
};

const auth = async (req, res, next) => {
  const TokenDecoded = tokenDecode(req);
  if (!TokenDecoded) {
    return responseHandlers.unauthorized(res);
  }
  const user = await userModel.findById(TokenDecoded.data);
  if (!user) {
    return responseHandlers.unauthorized(res);
  }
  req.user = user;
  next();
};

export default { tokenDecode, auth };
